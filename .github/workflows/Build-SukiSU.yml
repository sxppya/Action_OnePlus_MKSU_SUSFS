name: Build OnePlus_Kernel
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8550'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace3_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'kalama'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android13'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.15'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android13-8-o-01127-g8db36bd42609'
      kernelsu_variant:
        description: "选择 KSU"
        required: true
        type: choice
        options:
          - SukiSU
          - SukiSU-Ultra
        default: SukiSU-Ultra
      kernelsu_version:
        description: "选择 KSU 版本"
        required: true
        type: choice
        options:
          - tag
          - main
        default: main
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
      VFS_patch_ENABLED:
        description: "添加 vfs 补丁（新钩子）？"
        required: true
        type: choice
        options:
          - enable
          - disable
        default: enable
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "ychenxuan"
         git config --global user.email "3494167979@qq.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/external/dtc/scripts/setlocalversion
      
      - name: SukiSU-Ultra & SukiSU version
        if: ${{ github.event.inputs.kernelsu_variant == 'SukiSU-Ultra' || github.event.inputs.kernelsu_variant == 'SukiSU' }}
        run: |
          if [[ "${{ github.event.inputs.kernelsu_version }}" == "tag" ]]; then
            echo "BRANCH=-" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.kernelsu_version }}" == "main" ]]; then
            echo "BRANCH=-s susfs-dev" >> $GITHUB_ENV
          fi
          
      - name: Add SukiSU-Ultra
        if: ${{ github.event.inputs.kernelsu_variant == 'SukiSU-Ultra' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Add SukiSU
        if: ${{ github.event.inputs.kernelsu_variant == 'SukiSU' }}
        run: |
           cd kernel_workspace/kernel_platform
           curl -LSs "https://raw.githubusercontent.com/ShirkNeko/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
           cd ./KernelSU
           KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
           echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
           export KSU_VERSION=$KSU_VERSION
           sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          
      - name: Apply SUSFS Patches SukiSU
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel_platform

          # Copy SUSFS patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          #lz4k
          #cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
          #cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
          #cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
           
          echo "正在给内核打susfs补丁"
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          echo "完成"
          
      - name: Apply Hide Stuff Patches
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/69_hide_stuff.patch ./
          echo "正在打隐藏应用补丁"
          patch -p1 -F 3 < 69_hide_stuff.patch
         
      - name: Apply New Hooks Patches
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'enable' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          echo "正在打vfs补丁"
          patch -p1 -F 3 < syscall_hooks.patch
          echo "完成"

          #  cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          #  patch -p1 -F 3 < lz4kd.patch || true

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig

          if [[ "${{ github.event.inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]]; then
             echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
           fi

          # Add VFS configuration settings
          if [[ "${{ github.event.inputs.VFS_patch_ENABLED }}" == 'enable' ]]; then
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          else
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "5.10" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_MODULE_SIG=n" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZO=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_DEF_COMP_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi
 
          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" != "6.6" ] && [ "${{ github.event.inputs.KERNEL_VERSION }}" != "5.10" ]; then
          #  sed -i 's/CONFIG_MODULE_SIG=y/CONFIG_MODULE_SIG=n/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi
 
          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.6" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi
 
          #if grep -q "CONFIG_ZSMALLOC=y" ./common/arch/arm64/configs/gki_defconfig && grep -q "CONFIG_ZRAM=y" ./common/arch/arm64/configs/gki_defconfig; then
          #  echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi
          
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
           if [[ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.1" || "${{ github.event.inputs.KERNEL_VERSION }}" == "6.6" ]]; then
             sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
           fi
           sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
  
      - name: Build kernel
        run: |
          cd kernel_workspace
          if [[ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.1" || "${{ github.event.inputs.KERNEL_VERSION }}" == "6.6" ]]; then
            ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} gki --action_env=KSU_VERSION
          else
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
          fi
         
      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          dir1="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/"
          dir2="./kernel_workspace/kernel_platform/common/out/arch/arm64/boot/"
          dir3="./kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/"
          target1="./AnyKernel3/"
          target2="./kernel_workspace/kernel"

          if find "$dir1" -name "Image" | grep -q "Image"; then
            image_path="$dir1"Image
          elif find "$dir2" -name "Image" | grep -q "Image"; then
            image_path="$dir2"Image
          elif find "$dir3" -name "Image" | grep -q "Image"; then
            image_path="$dir3"Image
          else
            image_path=$(find "./kernel_workspace/kernel_platform/common/out/" -name "Image" | head -n 1)
          fi

          if [ -n "$image_path" ] && [ -f "$image_path" ]; then
            mkdir -p "$dir1"
            if [ "$(realpath "$image_path")" != "$(realpath "$dir1"Image)" ]; then
              cp "$image_path" "$dir1"
            else
              echo "源文件与目标相同，跳过复制"
            fi
          else
            echo "未找到 Image 文件，构建可能失败"
            exit 1
          fi

      - name: Apply patch_linux and replace Image
        if: ${{ github.event.inputs.kernelsu_variant == 'SukiSU-Ultra' }}
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel
         
         
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: Image_KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel

      - name: 📦 Collect logs if build fails
        if: failure()
        run: |
         mkdir -p logs
          echo "📅 构建时间：$(date '+%Y-%m-%d %H:%M:%S')" > logs/BUILD_INFO.txt
          echo "📱 构建设备：${{ github.event.inputs.FEIL }}" >> logs/BUILD_INFO.txt
          echo "🔢 构建版本：build-${{ github.run_number }}" >> logs/BUILD_INFO.txt
          echo "📦 仓库来源：${{ github.repository }}" >> logs/BUILD_INFO.txt
          echo "👤 仓库拥有者：${{ github.repository_owner }}" >> logs/BUILD_INFO.txt
          cp -r kernel_workspace/kernel_platform/common/out logs/common || true
          cp -r kernel_workspace/kernel_platform/out logs/platform || true
          zip -r logs.zip logs || true


      - name: 🗂️ Upload build logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v4
        with:
         name: Kernel_Build_Logs_${{ github.run_number }}
         path: logs.zip

      - name: 🚨 Upload logs to Telegram (on failure)
        if: failure()
        run: |
         escape_markdown_v2() {
         local raw="$1"
         echo "$raw" | sed -e 's/\\/\\\\/g' -e 's/\*/\\*/g' -e 's/_/\\_/g' -e 's/\[/\\[/g' \
                        -e 's/\]/\\]/g' -e 's/(/\\(/g' -e 's/)/\\)/g' -e 's/\./\\./g' \
                        -e 's/-/\\-/g' -e 's/=/\\=/g' -e 's/!/\\!/g'
         }

         OWNER="${{ github.repository_owner }}"
         if [[ "$OWNER" == "sxppya" ]]; then
         FEIL_ESCAPED=$(escape_markdown_v2 "${{ github.event.inputs.FEIL }}")
         VERSION_ESCAPED=$(escape_markdown_v2 "build-${{ github.run_number }}")

         if [ -f logs.zip ]; then
           curl -F document=@logs.zip \
             -F chat_id=${{ secrets.TG_CHAT_ID }} \
             -F caption="❌ 构建失败\\! 已打包日志\\.\n📱 设备：${FEIL_ESCAPED}\n🏷️ 版本：${VERSION_ESCAPED}" \
             -F parse_mode=MarkdownV2 \
             https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendDocument
         else
         echo "⚠️ 未找到 logs.zip，跳过上传"
         fi
         else
         echo "⛔ 非主仓库（$OWNER），跳过 Telegram 推送"
         fi


          
      - name: Compress AnyKernel3 to zip
        if: ${{ success() }}
        run: |
          ZIP_NAME="${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}.zip"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          cd AnyKernel3
          zip -r ../$ZIP_NAME ./*
          cd ..

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         name: "${{ github.event.inputs.FEIL }}-build-${{ github.run_number }}"
         tag_name: "${{ github.event.inputs.FEIL }}-build-${{ github.run_number }}"
         files: |
          ./${{ env.ZIP_NAME }}
          ./AnyKernel3/Image
          
      - name: Upload zip to Telegram (only for your repo)
        if: ${{ success() }}
        run: |
         if [[ "${{ github.repository_owner }}" == "sxppya" ]]; then
         curl -F document=@./${{ env.ZIP_NAME }} \
           -F chat_id=${{ secrets.TG_CHAT_ID }} \
           -F caption="📦 内核构建完成！版本号：${{ env.KSUVER }} 设备：${{ github.event.inputs.FEIL }}" \
           https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendDocument
           else
           echo "⛔ 非主仓库，跳过 Telegram 推送"
           fi


      - name: Upload Image to Telegram (only for your repo)
        if: ${{ success() }}
        run: |
         if [[ "${{ github.repository_owner }}" == "sxppya" ]]; then
         curl -F document=@./AnyKernel3/Image \
           -F chat_id=${{ secrets.TG_CHAT_ID }} \
           -F caption="📦 Image 上传成功！设备：${{ github.event.inputs.FEIL }}，Tag：build-${{ env.KSUVER }}" \
           https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendDocument
           else
           echo "⛔ 非主仓库，跳过 Telegram 推送"
           fi

      - name: Telegram 推送
        if: always()
        run: |
          escape_markdown_v2() {
          local raw="$1"
          echo "$raw" | sed -e 's/\\/\\\\/g' \
                        -e 's/\*/\\*/g' \
                        -e 's/_/\\_/g' \
                        -e 's/\[/\\[/g' \
                        -e 's/\]/\\]/g' \
                        -e 's/(/\\(/g' \
                        -e 's/)/\\)/g' \
                        -e 's/\./\\./g' \
                        -e 's/-/\\-/g' \
                        -e 's/=/\\=/g' \
                        -e 's/!/\\!/g' \
                        -e 's/#/\\#/g' \
                        -e 's/~/\\~/g' \
                        -e 's/\`/\\`/g' \
                        -e 's/>/\\>/g' \
                        -e 's/\+/\\+/g' \
                        -e 's/|/\\|/g' \
                        -e 's/{/\\{/g' \
                        -e 's/}/\\}/g'
          }

          if [[ "${GITHUB_REPOSITORY_OWNER}" == "sxppya" ]]; then
          STATUS="✅ 构建成功"
          [[ "success" != "success" ]] && STATUS="❌ 构建失败"

          REPO="${GITHUB_REPOSITORY}"
          TAG="oneplus_11_v-build-24"

          RAW_TEXT="*OnePlus 内核构建通知* 🧱\
                    *状态：* ${STATUS}\
                    *仓库：* ${REPO}\
                    *版本：* ${TAG}\
                    [查看构建日志](https://github.com/${REPO}/actions/runs/${{ github.run_id }})"

              TEXT_ESCAPED=$(escape_markdown_v2 "$RAW_TEXT")

              curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
              -d chat_id=${{ secrets.TG_CHAT_ID }} \
              -d parse_mode="MarkdownV2" \
              -d text="$TEXT_ESCAPED"
              else
              echo "⛔ 非主仓库，跳过 Telegram 推送"
              fi
